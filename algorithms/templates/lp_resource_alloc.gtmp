*ATTR*CREATE QUERY resourceAlloc*EXT* (VERTEX source, INT topK) FOR GRAPH *graph* {
*ACCM*CREATE QUERY resourceAlloc*EXT* (VERTEX source, INT topK) FOR GRAPH *graph* {
*FILE*CREATE QUERY resourceAlloc*EXT* (VERTEX source, INT topK, FILE f) FOR GRAPH *graph* {
        SumAccum<FLOAT> @score;

        start = {source};

        # 1 hop neighbors
        N1 = SELECT n from start:s-(ANY)-ANY:n;

        # 2 hop neighbors
        N2 = SELECT n from N1:s-(ANY)-ANY:n
            WHERE n != source
            ACCUM n.@score += 1.0/s.outdegree()
            ORDER BY n.@score DESC
            LIMIT topK;

*ATTR*  N2 = SELECT s FROM N2:s
*ATTR*          POST-ACCUM INSERT INTO *insert-edge-name* values (source, s, s.@score);

*ACCM*  PRINT N2.@score;

*FILE*  f.println("Vertex1", "Vertex2", "Resource Allocation score");
*FILE*  N2 = SELECT s FROM N2:s POST-ACCUM f.println(source, s, s.@score);
}