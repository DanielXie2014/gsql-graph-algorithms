CREATE QUERY tri_count(INT split = 1) FOR GRAPH *graph* {
# Compute the total number of triangles in the GRAPH. No input parameters are needed.
        SumAccum<int> @@cnt;
	      SetAccum<VERTEX> @self;

        all = {*vertex-types*};
	      all = SELECT s
	            FROM all:s 
	            ACCUM s.@self += s;

# For each edge e, the number of triangles that contain e is equivalent
# to the number of common neighbors between vertices s and t 
	
	      // add split, starting from a subset of vertices.
		    FOREACH i IN RANGE[0, split-1] DO 
                subset = SELECT s
                         FROM all:s
                         WHERE getvid(s) % split == i;
	              tmp = SELECT t
	                    FROM subset:s -(*edge-types*:e) -:t
                      WHERE getvid(s) > getvid(t)
                      ACCUM INT c = COUNT((*s_neighbors* MINUS s.@self) INTERSECT (*t_neighbors* MINUS t.@self)),
                            @@cnt += c;
	      END;
                            
# Each triangle is counted 3 times for each edge, so final result is divided by 3
        PRINT @@cnt/3 AS num_triangles;
}
