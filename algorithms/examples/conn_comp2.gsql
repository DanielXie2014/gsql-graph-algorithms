CREATE QUERY conn_comp () FOR GRAPH social {
# This query identifies the Connected Components (undirected edges)

        SumAccum<INT> @cid;        //community id for each vertex
        MapAccum<INT, INT> @@compSizes;
        INT n = 0;
        INT curr_cid;
        Unvisited = {Person.*};

# Initialize: Label each vertex with its own internal ID
        Unvisited = SELECT s
                    FROM Unvisited:s
                    POST-ACCUM s.@cid = getvid(s);

# Traverse from an unvisited vertex, and mark its connected vertices
        WHILE (Unvisited.size() > 0) DO
                Start = SELECT s
                        FROM Unvisited:s
                        LIMIT 1;
                Start = SELECT s
                        FROM Start:s
                        POST-ACCUM curr_cid = s.@cid
                        ;
                WHILE (Start.size() > 0) DO
                        Unvisited = Unvisited MINUS Start;
                        @@compSizes += (curr_cid -> Start.size());
                        Start = SELECT t
                                FROM Start:s -(Coworker:e)-> Person:t
                                ACCUM t.@cid = s.@cid
                                HAVING t.@cid != t.@cid';
                END;
        END;

        Start = {Person.*};

        Start = SELECT s FROM Start:s
                POST-ACCUM @@compSizes += (s.@cid -> 1);
        PRINT @@compSizes;
        PRINT Start.@cid;

}

#INSTALL QUERY conn_comp
