CREATE QUERY label_prop (INT iter, INT split = 1) FOR GRAPH social {
# Partition the vertices into communities, according to the Label Propagation method.
# Indicate community membership by assigning each vertex a community ID.

        OrAccum @@changed = TRUE;
        MapAccum<int, int> @label_count;     # <communityId, numNeighbors>
        MapAccum<int, int> @@comm_sizes;   # <communityId, members>
        SumAccum<int> @label;    
        all = {Person.*};

# Assign unique labels to each vertex
        all = SELECT s FROM all:s ACCUM s.@label = getvid(s);

# Propagate labels to neighbors until labels converge or the max iterations is reached
        WHILE @@changed == TRUE LIMIT iter DO
                @@changed = FALSE;
                FOREACH i in range[0, split-1] DO
                        start = SELECT s
                                FROM all:s 
                                WHERE getvid(s) % split == i; 
                        start = SELECT s 
                                FROM start:s -((Coworker):e)-> :t
                                ACCUM s.@label_count += (t.@label -> 1)  # count the occurrences of neighbor's labels
                                POST-ACCUM
                                        INT max_count = 0,
                                        INT label = 0,
                                        # Iterate over the map to get the neighbor label that occurs most often
                                        FOREACH (key, value) IN s.@label_count DO
                                                CASE WHEN value > max_count THEN
                                                        max_count = value,
                                                        label = key
                                                END
                                        END,
                                        # When the neighbor search finds a label AND it is a new label
                                        # AND the label's count has increased, update the label.
                                        CASE WHEN s.@label_count.size()>0 AND s.@label != label THEN
                                                @@changed += TRUE,
                                                s.@label = label
                                        END,
                                        s.@label_count.clear();
                END;
        END;

        all = {Person.*};

        all = SELECT s FROM all:s
              POST-ACCUM @@comm_sizes += (s.@label -> 1);
        PRINT @@comm_sizes;
        PRINT all.@label;
 
}

#INSTALL QUERY label_prop
